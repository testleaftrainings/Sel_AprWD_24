Todays Agenda!!
================
   09:30 to 09.45-Recap
   09:45-10:45-Arrays
   10:45-11:10-Breakout+Break
   11:10-11:40-String
   11:40-12:05-Breakout+Break
   12:05-12:30-Continue with String



int a=20;
String name="TestLeaf";

String[] name={"Dilip","Vinoth","Gokul"};
int[] number={1,3,5,7,8,3};
Arrays:
=======

what is array?

An array is collection of similar datatypes
Array index start from '0'
its fixed data 
if you not given values to arrya .its waste and  cannot reuse










String:
=======
String is class
collection of characters

String is immutable--- we cannot changeable


to types e can create string
1.STRING LITERAL
2.STRING OBJECT

STRING LITERAL
String company ="TestLeaf";

STRING OBJECT:
String company=ne String("TestLeaf");

Methods:
length()--to find 	ho many characters --int
toCharArray()-- covert string to character array--char[]
equals("")-- to compare String content--boolean
equalIgnoreCase()--it ill not compare loercase or uppercase
contins()--  compare the string ith matching content-- boolean
indexOf()-- ill return the index  position of the given character---int
CharAt()--character available in the given  position---character




















   Classroom 1:
Find the duplicate number in the given Arrays
int[] input={2,5,3,1,4,5,7,6,3,2}

1.Declare values
2.get the length of the array 
3.iterate from 0 to the array length-1 (outer loop starts here)
4.iterate from i to the length of the array by adding 1 to it (inner loop starts here)
5.compare both the loop variables & check they're equal
6.print the matching value


Classroom 2:
FindSecondLargest 
// Here is the input
		int[] data = {3,2,11,4,6,7};
		 Pseudo Code:
		 1) Arrange the array in ascending order
		 2) Pick the 2nd element from the last and print it





Classroom 3:
ReverseString 

// Here is the input
		String test = "Amazon";

		// Build the logic to find the count of each
		/* Pseudo Code: 1
			a) Convert the String to character array
			b) Traverse through each character (using loop in reverse direction)
			c) Print the character (without newline -> like below
			   System.out.print(ch);
		*/